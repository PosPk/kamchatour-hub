Изменения (Фаза 1) — перенос на Next app/api, безопасность вебхуков, унификация ENV

Дата: 2025-09-15

Основные цели фазы:
- Консолидация API в Next.js `app/api/*` (архивация `api/*`, кроме нужных прокси)
- Node 20 LTS локально/CI/Vercel (начато — обновлён `.nvmrc`)
- Безопасные вебхуки CloudPayments (raw body + HMAC) и Telegram (HMAC initData)
- Стандартизация ENV для платежей

Список изменений по файлам

Изменено
- /.nvmrc
  - 22 → 20 (Node 20 LTS)

- app/api/tg/auth/route.ts
  - Удалена заглушка; добавлена полноценная валидация Telegram `initData` по HMAC
  - TTL 10 минут, коды ошибок 400/401/500

- app/api/payment/config/route.ts
  - Переход на переменные окружения `CLOUDPAYMENTS_PUBLIC_ID`, `CLOUDPAYMENTS_COMMISSION`

- app/api/activities/list/route.ts
  - Новый Next route (перенос логики из `api/activities/list.ts`)
  - Интеграция с Tilda (если заданы ключи), иначе демо-данные
  - Фильтрация по `q` (indexOf) для совместимости таргета

Добавлено (новые Next `app/api/*` маршруты)
- app/api/webhooks/cloudpays/route.ts
  - Вебхук CloudPayments: чтение `req.text()` (raw body), HMAC SHA256 по `X-Signature`
  - Идемпотентность по `TransactionId`; обновление `payments`/`bookings`

- app/api/feed/list/route.ts
  - Список постов фида из Supabase (fallback — пустой список)

- app/api/feed/post/route.ts
  - Создание поста фида; возврат id

- app/api/feed/like/route.ts
  - RPC `feed_like` по id поста

- app/api/feed/comment/route.ts
  - Добавление комментария к посту

- app/api/transfer/hold/route.ts
  - Создание hold на места с TTL; перевод мест в статус `hold`

- app/api/transfer/book/route.ts
  - Бронирование по `hold_id`; перевод мест в `booked`

- app/api/transfer/search/route.ts
  - Поиск рейсов по дате/маршруту (Supabase)

- app/api/pays/create/route.ts
  - Инициация платежа (перенос из `api/pays/create.ts`), формирование payload для виджета

- app/api/tg/webhook/route.ts
  - Вебхук Telegram: секретный заголовок, идемпотентность по `update_id`, upsert `tg_users`

- app/api/config/route.ts
  - Конфигурация для клиента: провайдер AI, флаги фич (payments, supabase)

- app/api/env/route.ts
  - Здоровье ENV: наличие ключевых переменных (Supabase, Payments, Telegram, AI, Bugsnag, Axiom)

- app/api/health/route.ts
  - Health-check: версия/uptime/флаги окружения/время

Технические служебные изменения
- /types/shims.d.ts
  - Временные шимы деклараций для `next/server`, `crypto`, `process` (для тип-чека в текущем окружении)

- /tsconfig.json
  - Добавлен `"lib": ["ES2019", "DOM"]` для возможностей Promise/DOM
  - Примечание: при использовании Expo base в чистом Next окружении убедиться в доступности `expo/tsconfig.base` или изменить `extends`

Примечания и следующие шаги (Фаза 1 → завершение)
- Заархивировать/проксировать `api/*` под `app/api/*` (сохранить обратную совместимость при необходимости)
- Обновить README и `.env.example` под согласованную ENV-конвенцию
- Настроить Vercel на Node 20 (runtime), проверить edge/serverless
- Подготовить OpenAPI для `app/api/*` (будет выполнено в фазе документации)

Влияние
- Единый рантайм Next `app/api/*`; устранены дубли/заглушки
- Повышена безопасность вебхуков (raw HMAC), унифицированы переменные CloudPayments
- Подготовлена база для Фазы 2 (схема БД + двухстадийные платежи + трансфер)

Оперативный отчёт (прогресс по фазам)
- Фаза 0 (Подготовка окружений): частично — Node 20 локально применён (`.nvmrc`). В процессе: закрепить Node 20 в Vercel/CI, зафиксировать ENV‑конвенцию в `.env.example` и README, включить обязательные статусы CI/правила ветвления.
- Фаза 1 (Архитектура/API): выполнено — перенос ключевых эндпоинтов в `app/api/*`, HMAC для Telegram/CloudPayments, конфиг/health/env, `activities/feed/transfer/pays` маршруты; в работе — архивировать `api/*` через прокси, выровнять ENV/README, зафиксировать Node 20 в Vercel/CI.
- Фаза 2 (База данных): не стартовали — принять `0006_*`, ввести enum/uuid, функции переходов, обновить RLS.
- Фаза 3 (Платежи 2‑стадийно): частично — вебхук готов; предстоит init auth(hold)/capture эндпоинты и негативные сценарии (sandbox/симуляторы).
- Фаза 4 (Трансфер): частично — `search/hold/book` перенесены; предстоит `transfer_pricing_rules`, воркер истечения hold, QR HMAC и офлайн‑верификация.
- Фаза 5 (Telegram): выполнено — `tg/auth` HMAC, webhook; предстоит контент команд `/status /todo /assign`.
- Фазы 6–12 (AI, Observability, Frontend, Ingest, SEO, CI, Docs, Cleanup): запланированы после завершения 1–4.

Следующие шаги (ближайшие 20–40 минут)
- Архивировать `api/*` с тонкими прокси на `app/api/*`.
- Обновить `.env.example` и README по новой ENV‑конвенции.
- Подготовить миграции для enum/uuid статусов (начало Фазы 2).

Дополнительно (GROQ)
- Добавлен маршрут `app/api/ai/chat/route.ts` — интеграция с GROQ Chat Completions API, ключ `GROQ_API_KEY`, модель по умолчанию `llama-3.1-70b-versatile`.

Отчёт (15:02 UTC+12)
- Что сделано за период:
  - Дополнил перенос Next `app/api/*`: `config`, `env`, `health`, `transfer/search`, `pays/create`, `tg/webhook`.
  - Интегрирован GROQ провайдер (`app/api/ai/chat/route.ts`), проверена обработка ошибок и формат сообщений.
  - Линтер по новым файлам — без ошибок; временные шимы типов сохранены.
- Что делаю дальше (следующие 20–40 минут):
  - Архивирую `api/*` с тонкими прокси на новые `app/api/*`.
  - Обновляю `.env.example` и README под единую ENV‑конвенцию (Client: NEXT_PUBLIC_*/EXPO_PUBLIC_*, Server: SUPABASE_*, CLOUDPAYMENTS_*, TELEGRAM_*, AI провайдеры, AXIOM_*).
  - Готовлю черновик миграций (enum/uuid статусы, функции переходов) — старт Фазы 2.
- Риски/блокеры:
  - Несогласованность прежних миграций (`schema.sql` vs `0006_*`) — потребует аккуратной консолидации.
  - Не установлены все серверные секреты в текущем окружении (GROQ/DeepSeek/xAI/Axiom) — нужна настройка для интеграционных тестов.
  - В CI/Vercel ещё не закреплён Node 20 — требуется обновление конфигураций пайплайна/проекта.

Отчёт по оптимизации (текущий)
- DevSecOps / Node 20 (статус ~30%): `.nvmrc=20` применён; требуется закрепить Node 20 в Vercel/CI и включить обязательные статусы.
- ENV‑конвенция (0%): подготовить `.env.example`, обновить README, синхронизировать переменные в Vercel.
- БД (0%): принять `0006_*`, добавить enum/uuid, функции переходов, обновить RLS (Фаза 2).
- Платежи (≈40%): вебхук HMAC готов; сделать init(auth)/capture и негативные сценарии + тесты.
- Трансфер (≈35%): перенесены `search/hold/book`; добавить pricing rules, cron истечения hold, QR HMAC и офлайн‑верификацию.
- AI Оркестратор (≈20%): добавлен GROQ chat; нужен роутер (DeepSeek+Groq, fallback xAI), лимиты/ретраи/бюджеты.
- Наблюдаемость (≈20%): есть серверный логгер; добавить Axiom дашборды и алерты (5xx, вебхуки, AI таймауты).
- QA (0%): е2е checkout/transfer и запуск в CI.
- Security (≈10%): HMAC реализован; запустить secret‑scan в CI, ревью CSP/headers, аудит RLS.
- Frontend качество (≈10%): skeleton/error/empty states, a11y/perf budgets.
- Документация (0%): OpenAPI для `app/api/*`, маршруты и runbooks.

Прогресс по фазам (оценка)
- Фаза 0: 30%  | Фаза 1: 80–85%  | Фаза 2: 0%  | Фаза 3: 40%  | Фаза 4: 35%
- Фаза 5: 70%  | Фаза 6: 20%     | Фаза 7: 20% | Фаза 8: 10%  | Фазы 9–12: 0–10%

Следующие шаги (20–40 минут)
- Закрепить Node 20 в Vercel/CI и добавить required checks (DevSecOps).
- Обновить `.env.example` и README (ENV‑конвенция) и начать синхронизацию в Vercel.
- Начать миграции БД (enum/uuid + функции переходов) — Фаза 2 старт.
